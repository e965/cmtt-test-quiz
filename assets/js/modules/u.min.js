"use strict";export const U={showScreen(e){delete $make.qs(".screen[data-current]").dataset.current,$make.qs(".screen-"+e).dataset.current=""},prepareText(e){let t={links:new RegExp(/\[link\|(?:[^\]]+)\|([^\]]+)\]/),bold:new RegExp(/\[b\|(?:[^\]]+)\]/),quote:new RegExp(/\[q\|(?:[^\]]+)\]/)},r=Object.keys(t),l={};r.forEach((e=>{l[e]=new RegExp(t[e],"g")}));let a={};return r.forEach((t=>{a[t]=e.match(l[t])})),a.links&&a.links.forEach((r=>{let l=r.split("|");e=e.replace(t.links,$create.link(l[1],l[2].replace(/]/g,""),"",["e","html"]))})),a.bold&&a.bold.forEach((r=>{let l=r.split("|");e=e.replace(t.bold,$create.elem("b",l[1].replace(/]/g,""),"",["html"]))})),a.quote&&a.quote.forEach((r=>{let l=r.split("|");e=e.replace(t.quote,$create.elem("q",l[1].replace(/]/g,""),"",["html"]))})),e},shuffleArray(e){for(let t=e.length-1;t>0;t--){const r=Math.floor(Math.random()*(t+1));[e[t],e[r]]=[e[r],e[t]]}return e},clearNode(e,t=[]){e.hasChildNodes()&&Array.from(e.childNodes).forEach((r=>{let l=!1;t.forEach((e=>{r.classList.contains(e)&&(l=!0)})),l||e.removeChild(r)}))}};